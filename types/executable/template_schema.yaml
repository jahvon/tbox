$schema: "http://json-schema.org/draft-07/schema#"
$id: "https://raw.githubusercontent.com/jahvon/flow/HEAD/types/executable/template_schema.yaml"

title: Template
description: Configuration for a flowfile template; templates can be used to generate flow files.

definitions:
  Artifact:
    type: object
    description: |
      File source and destination configuration.
      Go templating from form data is supported in all fields.
    required:
      - srcName
    properties:
      if:
        type: string
        description: | 
          An expression that determines whether the the artifact should be copied, using the Expr language syntax. 
          The expression is evaluated at runtime and must resolve to a boolean value. If the condition is not met, 
          the artifact will not be copied.

          The expression has access to OS/architecture information (os, arch), environment variables (env), form input 
          (form), and context information (name, workspace, directory, etc.).
          
          See the [flow documentation](https://flowexec.io/#/guide/templating) for more information.
        default: ""
      asTemplate:
        type: boolean
        default: false
        description: |
          If true, the artifact will be copied as a template file. The file will be rendered using Go templating from 
          the form data. [Sprig functions](https://masterminds.github.io/sprig/) are available for use in the template.
      srcDir:
        type: string
        default: ""
        description: |
          The directory to copy the file from. 
          If not set, the file will be copied from the directory of the template file.
      srcName:
        type: string
        description: The name of the file to copy.
      dstDir:
        type: string
        description: |
          The directory to copy the file to. If not set, the file will be copied to the root of the flow file directory.
          The directory will be created if it does not exist.
        default: ""
      dstName:
        type: string
        default: ""
        description: The name of the file to copy to. If not set, the file will be copied with the same name.

  Field:
    type: object
    description: A field to be displayed to the user when generating a flow file from a template.
    required:
      - key
      - prompt
    properties:
      key:
        type: string
        description: The key to associate the data with. This is used as the key in the template data map.
      prompt:
        type: string
        description: A prompt to be displayed to the user when collecting an input value.
      group:
        type: integer
        description: The group to display the field in. Fields with the same group will be displayed together.
        default: 0
      description:
        type: string
        default: ""
        description: A description of the field.
      default:
        type: string
        default: ""
        description: The default value to use if a value is not set.
      required:
        type: boolean
        description: If true, a value must be set. If false, the default value will be used if a value is not set.
        default: false
      validate:
        type: string
        default: ""
        description: A regular expression to validate the input value against.
      type:
        type: string
        enum:
          - text
          - masked
          - multiline
          - confirm
        default: text
        description: The type of input field to display.
      value:
        type: string
        goJSONSchema:
          identifier: value

  TemplateRefConfig:
    type: object
    description: Configuration for a template executable.
    properties:
      cmd:
        type: string
        description: |
          The command to execute.
          One of `cmd` or `ref` must be set.
        default: ""
      ref:
        $ref: '../executable/executable_schema.yaml#/definitions/Ref'
        description: |
          A reference to another executable to run in serial.
          One of `cmd` or `ref` must be set.
        default: ""
        goJSONSchema:
          type: "Ref"
      args:
        type: array
        items:
          type: string
        description: Arguments to pass to the executable.
        default: []
      if:
        type: string
        description: |
          An expression that determines whether the executable should be run, using the Expr language syntax. 
          The expression is evaluated at runtime and must resolve to a boolean value. If the condition is not met, 
          the executable will be skipped.

          The expression has access to OS/architecture information (os, arch), environment variables (env), form input 
          (form), and context information (name, workspace, directory, etc.).
          
          See the [flow documentation](https://flowexec.io/#/guide/templating) for more information.
        default: ""

type: object
required:
  - template
properties:
  artifacts:
    type: array
    description: A list of artifacts to be copied after generating the flow file.
    items:
      $ref: '#/definitions/Artifact'
  preRun:
    type: array
    description: A list of exec executables to run before generating the flow file.
    items:
      $ref: '#/definitions/TemplateRefConfig'
  postRun:
    type: array
    description: A list of exec executables to run after generating the flow file.
    items:
      $ref: '#/definitions/TemplateRefConfig'
  form:
    type: array
    default: []
    description: |
      Form fields to be displayed to the user when generating a flow file from a template. 
      The form will be rendered first, and the user's input can be used to render the template.
      For example, a form field with the key `name` can be used in the template as `{{.name}}`.
    items:
      $ref: '#/definitions/Field'
    goJSONSchema:
      type: "FormFields"
  template:
    type: string
    description: The flow file template to generate. The template must be a valid flow file after rendering.
  location:
    type: string
    goJSONSchema:
      identifier: location
  assignedName:
    type: string
    goJSONSchema:
      identifier: assignedName
